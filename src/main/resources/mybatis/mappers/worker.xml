<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proj.spring.mes.dao.mapper.WorkerMapperDAO">
	<!-- SQL문 작성 영역 -->
	
	<!-- 전체 조회 -->
	<select id="selectWorker" resultType="workerDTO">
		select 
	        w.worker_id,
	        w.worker_name,
	        w.worker_birth,
	        w.worker_pw,
	        w.worker_email,
	        w.worker_code,
	        w.worker_join,
	        w.department_id,
	        d.department_name
	    from V3_worker w
	    LEFT JOIN V3_department d
	        on w.department_id = d.department_id
	    order by w.worker_id
	</select>
	
	
	<!-- 
		resultType을 별칭을 쓸 수 있는 이유는 
		modelConfig.xml에서 typeAlias 별칭을 설정해놨기 때문이다. 
	-->
	
	<!-- 하나만 조회 -->
	<select id="selectOneWorker" resultType="workerDTO">
		select * from V3_worker
		where worker_id = #{_parameter}
	</select>
	
	<select id="selectDept" resultType="deptDTO">
		select * from V3_department
	</select>
	
	<select id="selectOneDept" resultType="workerDTO">
		select * from V3_department
		where department_id = #{_parameter}
	</select>


	<!-- update -->
	<update id="updateWorker" parameterType="workerDTO">
		update V3_worker
		set	worker_name = #{worker_name},
			worker_birth = #{worker_birth},
			worker_pw = #{worker_pw},
			worker_email = #{worker_email},
			worker_code = #{worker_code},
			worker_join = #{worker_join},
			department_id = #{department_id}
		where worker_id = #{worker_id}
	</update>

	<!-- delete -->
	<!-- resultType이 정해져 있어 따로 안써도 됨 -->
	<delete id="deleteWorker" parameterType="workerDTO">
		delete from V3_worker
		where worker_id= #{worker_id}	
	</delete>
	
	<!-- insert -->
	<insert id="insertWorker" parameterType="workerDTO">
  
	  <!-- 먼저 worker_id 생성 -->
	  <selectKey keyProperty="worker_id" resultType="string" order="BEFORE">
	    SELECT 'A' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(worker_id_seq.NEXTVAL, 2, '0')
	    FROM dual
	  </selectKey>
	
	  INSERT INTO V3_worker (
	      worker_id, worker_name, worker_birth, worker_pw,
	      worker_email, worker_code, worker_join, department_id
	  )
	  VALUES (
	      #{worker_id}, #{worker_name}, #{worker_birth}, #{worker_pw},
	      #{worker_email}, #{worker_code}, #{worker_join}, #{department_id}
	  )
	</insert>

	<update id="updatePassword">
	  UPDATE V3_worker
	     SET worker_pw = #{hashed}
	   WHERE worker_id = #{worker_id}
	</update>

</mapper>




