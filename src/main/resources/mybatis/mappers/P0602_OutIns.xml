<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proj.spring.mes.dao.mapper.P0602_OutInsMapperDAO">
	<!-- SQL문 작성 영역 -->
	
	<!-- 전체 조회 -->
	<select id = "selectOutIns" resultType = "P0602_OutInsDTO">
		select
		    i.inspection_result_id, i.inspection_result_date, i.inspection_result_good,
		    i.inspection_result_bad, i.worker_id, i.stock_id,
		    w.worker_name, it.item_name
		from v3_inspection_result i 
		    left outer join v3_worker w
		        on i.worker_id = w.worker_id
		    left outer join v3_stock s
		        on i.stock_id = s.stock_id
		    left outer join v3_item it
		        on s.item_id = it.item_id
		<where>
			inspection_type = 1
			<if test="inspection_result_id != null and inspection_result_id != ''">
				and i.inspection_result_id like '%' || #{inspection_result_id} || '%'
			</if>
	        <if test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">
	            and i.inspection_result_date BETWEEN #{fromDate} AND #{toDate}
	        </if>
			<if test="item_name != null and item_name != ''">
				and lower(it.item_name) like lower('%' || #{item_name} || '%')
			</if>
		</where> 
		order by inspection_result_id
	</select>

	<!-- 전체 조회 : 페이지 넣는 기준 -->
	<select id="selectOutInsPage" resultType="P0602_OutInsDTO">
	    <bind name="startRow" value="offset + 1"/>
	    <bind name="endRow"   value="offset + limit"/>
		SELECT *
		FROM (
			SELECT t.*, ROWNUM rn
			FROM (
				select
					i.inspection_result_id, i.inspection_result_date, i.inspection_result_good,
					i.inspection_result_bad, i.worker_id, i.stock_id,
					w.worker_name, it.item_name
				from v3_inspection_result i
					left outer join v3_worker w on i.worker_id = w.worker_id
					left outer join v3_stock s on i.stock_id = s.stock_id
					left outer join v3_item it on s.item_id = it.item_id
				<where>
					inspection_type = 1
					<if test="filter.inspection_result_id != null and filter.inspection_result_id != ''">
						and lower(i.inspection_result_id) like lower('%' || #{filter.inspection_result_id} || '%')
					</if>
					<if test="filter.fromDate != null and filter.fromDate != '' and filter.toDate != null and filter.toDate != ''">
						and i.inspection_result_date BETWEEN #{filter.fromDate} AND #{filter.toDate}
					</if>
					<if test="filter.item_name != null and filter.item_name != ''">
						and lower(it.item_name) like lower('%' || #{filter.item_name} || '%')
					</if>
				</where>
			order by inspection_result_id
			) t
			<![CDATA[
			WHERE ROWNUM <= #{endRow}
			]]>
		)
		<![CDATA[
		WHERE rn >= #{startRow}
		]]>
	</select>
	
	  <!-- 총 레코드 수 -->
	  <select id="selectOutInsCount" parameterType="map" resultType="long">
		SELECT COUNT(*)
		from v3_inspection_result i
		left outer join v3_worker w on i.worker_id = w.worker_id
		left outer join v3_stock s on i.stock_id = s.stock_id
		left outer join v3_item it on s.item_id = it.item_id
		<where>
			inspection_type = 1
			<if test="filter.inspection_result_id != null and filter.inspection_result_id != ''">
			and lower(i.inspection_result_id) like lower('%' || #{filter.inspection_result_id} || '%')
			</if>
			<if test="filter.fromDate != null and filter.fromDate != '' and filter.toDate != null and filter.toDate != ''">
			and i.inspection_result_date BETWEEN #{filter.fromDate} AND #{filter.toDate}
			</if>
			<if test="filter.item_name != null and filter.item_name != ''">
			and lower(it.item_name) like lower('%' || #{filter.item_name} || '%')
			</if>
		</where>
	</select>
	
	<!-- 단일 조회 -->
	<select id = "selectOneOutIns" resultType = "P0602_OutInsDTO">
		select
			i.inspection_result_id, i.inspection_result_date, i.inspection_result_good,
			i.inspection_result_bad,
			i.worker_id,
			i.stock_id,
			w.worker_name,
			it.item_name
		from v3_inspection_result i
			left outer join v3_worker w
				on i.worker_id = w.worker_id
			left outer join v3_stock s
				on i.stock_id = s.stock_id
			left outer join v3_item it
				on s.item_id = it.item_id
		where i.inspection_result_id = #{inspection_result_id}
	</select>
	
	<!-- 조회 : 작업자 입력용 -->
	<select id="selectWorkerName" resultType="P0602_OutInsDTO">
		select 
	        worker_id, worker_name
	    from V3_worker w
	    order by worker_id
	</select>
	
	<!-- 조회 : 재고 입력 -->
	<select id = "selectStock" resultType="P0602_OutInsDTO">
		select
			s.stock_id, i.item_name, i.item_div
		from v3_stock s
		left outer join v3_item i
			on s.item_id = i.item_id
		where i.item_div = '완제품'
	</select>
	
	<!-- 수정 -->
	<update id = "updateOutIns" parameterType = "P0602_OutInsDTO">
		update v3_inspection_result
		set inspection_result_date = #{inspection_result_date},
			inspection_result_good = #{inspection_result_good},
			inspection_result_bad = #{inspection_result_bad},
			worker_id = #{worker_id},
			stock_id = #{stock_id}
		where inspection_result_id = #{inspection_result_id}
	</update>
	
	<!-- 삭제 -->
<!-- 	<delete id = "deleteOutIns" parameterType = "P0602_OutInsDTO"> -->
<!-- 		delete from v3_inspection_result -->
<!-- 		where inspection_result_id = #{inspection_result_id} -->
<!-- 	</delete> -->
	
	<!-- 삭제(다중) : 다중 삭제는 parameterType을 DTO로 하면 안 됨 -->
	<delete id = "deleteOutIns" parameterType = "java.util.List">
		delete from v3_inspection_result
		where inspection_result_id in
		<foreach item="id" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<!-- 삽입 -->
	<insert id = "insertOutIns" parameterType = "P0602_OutInsDTO">
		<selectKey keyProperty="inspection_result_id" resultType="string" order="BEFORE">
		  select 'L' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(inspection_result_id_seq.NEXTVAL, 2, '0')
		  from dual
		</selectKey>
		
		insert into v3_inspection_result (
			inspection_result_id, inspection_result_date, inspection_result_good,
			inspection_result_bad, worker_id, stock_id, inspection_type
		)
		values (
			#{inspection_result_id}, #{inspection_result_date},
			#{inspection_result_good}, #{inspection_result_bad},
			#{worker_id}, #{stock_id}, 1
		)
	</insert>
</mapper>