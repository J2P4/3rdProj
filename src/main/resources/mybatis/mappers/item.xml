<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="proj.spring.mes.dao.mapper.ItemMapperDAO">

    <select id="count" resultType="long">
        SELECT COUNT(*) FROM V3_ITEM
    </select>

    <select id="list" resultType="proj.spring.mes.dto.ItemDTO">
        SELECT * FROM (
            SELECT A.*, ROWNUM RN FROM (
                SELECT * FROM V3_ITEM ORDER BY ITEM_ID DESC
            ) A
            WHERE ROWNUM &lt;= #{end}
        )
        WHERE RN &gt;= #{start}
    </select>

    <select id="selectItemOne" parameterType="string" resultType="proj.spring.mes.dto.ItemDTO">
        SELECT * FROM V3_ITEM WHERE ITEM_ID = #{itemId}
    </select>

    <insert id="insertItem" parameterType="proj.spring.mes.dto.ItemDTO">
        INSERT INTO V3_ITEM (ITEM_ID, ITEM_NAME, ITEM_DIV, ITEM_PRICE, ITEM_UNIT)
        VALUES (#{item_id}, #{item_name}, #{item_div}, #{item_price}, #{item_unit})
    </insert>

    <update id="updateItem" parameterType="proj.spring.mes.dto.ItemDTO">
        UPDATE V3_ITEM
           SET ITEM_NAME  = #{item_name},
               ITEM_DIV   = #{item_div},
               ITEM_PRICE = #{item_price},
               ITEM_UNIT  = #{item_unit}
         WHERE ITEM_ID = #{item_id}
    </update>

    <delete id="deleteItems" parameterType="list">
        DELETE FROM V3_ITEM WHERE ITEM_ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="nextItemIdByDiv" parameterType="string" resultType="string">
        SELECT
          (CASE
             WHEN #{itemDiv} = '도서'   THEN 'Q'
             WHEN #{itemDiv} = '포장지' THEN 'W'
             WHEN #{itemDiv} = '완제품' THEN 'E'
             ELSE 'X'
           END)
          || TO_CHAR(SYSDATE, 'YYMMDD')
          || LPAD(V3_ITEM_SEQ.NEXTVAL, 4, '0')
        FROM DUAL
    </select>

    <insert id="insertClientItem">
        INSERT INTO V3_CLIENT_ITEMS (ITEM_ID, CLIENT_ID)
        SELECT #{itemId}, #{clientId} FROM DUAL
        WHERE NOT EXISTS (
            SELECT 1 FROM V3_CLIENT_ITEMS
             WHERE ITEM_ID = #{itemId}
               AND CLIENT_ID = #{clientId}
        )
    </insert>

    <select id="selectClientsByItemId" resultType="map">
        SELECT c.client_id, c.client_name
          FROM V3_CLIENT_ITEMS ci
          JOIN V3_CLIENT c ON c.client_id = ci.client_id
         WHERE ci.item_id = #{itemId}
         ORDER BY c.client_id
    </select>

</mapper>
